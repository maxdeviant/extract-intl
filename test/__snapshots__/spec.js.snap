// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`extract-intl FormattedMessage should extract a message 1`] = `
Object {
  "duplicates": Array [],
  "messages": Object {
    "list_item.title": Object {
      "defaultMessage": "My List Item",
      "description": "",
      "values": Object {},
    },
  },
}
`;

exports[`extract-intl FormattedMessage should extract from multiple files 1`] = `
Object {
  "duplicates": Array [],
  "messages": Object {
    "component_a.body_text": Object {
      "defaultMessage": "Hello there!",
      "description": "",
      "values": Object {},
    },
    "component_a.title": Object {
      "defaultMessage": "Component A",
      "description": "",
      "values": Object {},
    },
    "component_b.title": Object {
      "defaultMessage": "Component B",
      "description": "",
      "values": Object {},
    },
  },
}
`;

exports[`extract-intl FormattedMessage should extract multiple messages 1`] = `
Object {
  "duplicates": Array [],
  "messages": Object {
    "list_item.body": Object {
      "defaultMessage": "This is my body text.",
      "description": "",
      "values": Object {},
    },
    "list_item.title": Object {
      "defaultMessage": "My List Item",
      "description": "",
      "values": Object {},
    },
  },
}
`;

exports[`extract-intl FormattedMessage should extract nested messages 1`] = `
Object {
  "duplicates": Array [],
  "messages": Object {
    "nested.all": Object {
      "defaultMessage": "ALL",
      "description": "",
      "values": Object {},
    },
    "nested.title": Object {
      "defaultMessage": "I understand this will delete {all} my data",
      "description": "",
      "values": Object {},
    },
  },
}
`;

exports[`extract-intl FormattedMessage should extract values 1`] = `
Object {
  "duplicates": Array [],
  "messages": Object {
    "list_item.title": Object {
      "defaultMessage": "My {adjective} List Item",
      "description": "",
      "values": Object {},
    },
  },
}
`;

exports[`extract-intl FormattedMessage should handle other string literal formats 1`] = `
Object {
  "duplicates": Array [],
  "messages": Object {
    "footer.copyright": Object {
      "defaultMessage": "Copyright (c) 2016",
      "description": "",
      "values": Object {},
    },
    "footer.subtitle": Object {
      "defaultMessage": "You have {messageCount, plural, one {# new message} other {# new messages}}!",
      "description": "",
      "values": Object {},
    },
    "footer.title": Object {
      "defaultMessage": "This footer is bangin'",
      "description": "",
      "values": Object {},
    },
  },
}
`;

exports[`extract-intl FormattedMessage should not fall over on spread props 1`] = `
Object {
  "duplicates": Array [],
  "messages": Object {
    "spreading_props.title": Object {
      "defaultMessage": "Hello, World",
      "description": "",
      "values": Object {},
    },
  },
}
`;

exports[`extract-intl FormattedMessage should support HTML messages 1`] = `
Object {
  "duplicates": Array [],
  "messages": Object {
    "html_component.title": Object {
      "defaultMessage": "HTML <em>Component</em>",
      "description": "",
      "values": Object {},
    },
  },
}
`;

exports[`extract-intl TypeScript can parse \`as const\` 1`] = `
Object {
  "duplicates": Array [],
  "messages": Object {
    "typescript.as_const.message": Object {
      "defaultMessage": "x = {constExpr}",
      "description": "",
      "values": Object {},
    },
  },
}
`;
